<?xml version="1.0"?>

<project name="maven-reactor" default="reactor" basedir="..">

  <!-- ================================================================== -->
  <!-- I N I T                                                            -->
  <!-- ================================================================== -->
  <target name="init" unless="maven.init">
    <taskdef
      name="create-classpath"
      classname="org.apache.maven.ant.CreateClasspath">
      <classpath>
        <pathelement location="${maven.repo.local}/maven.jar"/>
      </classpath>
    </taskdef>
    
    <create-classpath
      listFile="${maven.home}/plugins/core/jars.list"
      reference="pre-maven-classpath"
      baseDir="${maven.repo.local}"
    />
    
    <path id="maven-classpath">
      <path refid="pre-maven-classpath"/>
      <pathelement location="${maven.repo.local}/maven.jar"/>
    </path>
    
    <!-- define maven taskdefs, as taskdefs are not yet inheritable? -->
    <taskdef resource="maven-taskdefs.properties">
      <classpath refid="maven-classpath" />
    </taskdef>
    
    <property name="maven.init" value="true" />
    
    <!-- call common build file initialization to verify project, update jars
         load project and default properties etc -->
    <maven-ant antfile="${maven.home}/plugins/core/build-init.xml"
      target="verify-project" 
      inheritAll="true" 
      inheritRefs="true" 
      exportAll="true"
      exportRefs="true"/>
      
  </target>

  <target name="local-init">
    <!-- generate-reactor -->
    <condition property="maven.reactor.callback.pre-generate-reactor.ok">
      <and>
        <available file="${maven.reactor.callback.pre-generate-reactor.buildFile}"/>
        <not>
          <equals arg1="${maven.reactor.callback.pre-generate-reactor.buildTarget}"
                  arg2="$${maven.reactor.callback.pre-generate-reactor.buildTarget}" />
        </not>
      </and>
    </condition>

    <condition property="maven.reactor.callback.post-generate-reactor.ok">
      <and>
        <available file="${maven.reactor.callback.post-generate-reactor.buildFile}"/>
        <not>
          <equals arg1="${maven.reactor.callback.post-generate-reactor.buildTarget}"
                  arg2="$${maven.reactor.callback.post-generate-reactor.buildTarget}" />
        </not>
      </and>
    </condition>

  </target>
  
  <!-- ================================================================== -->
  <!-- R E A C T O R  G E N E R A T O R                                   -->
  <!-- ================================================================== -->
  <!-- Generate a reactor for a given Maven workspace. The workspace      -->
  <!-- describes attributes of the build environment, the profile defined -->
  <!-- within the workspace lists the projects to be built.               -->
  <!-- ================================================================== -->

  <target 
    name="generate-reactor"
    depends="local-init, pre-generate-reactor-callback, do-generate-reactor, 
      post-generate-reactor-callback"/>
      
  <target name="pre-generate-reactor-callback"
    if="maven.reactor.callback.pre-generate-reactor.ok">
    <maven-ant antfile="${maven.reactor.callback.pre-generate-reactor.buildFile}" 
      target="${maven.reactor.callback.pre-generate-reactor.buildTarget}"
      inheritRefs="true" exportAll="false" exportRefs="false"/>
  </target>
  
  <target name="post-generate-reactor-callback"
    if="maven.reactor.callback.post-generate-reactor.ok">
    <maven-ant antfile="${maven.reactor.callback.post-generate-reactor.buildFile}" 
      target="${maven.reactor.callback.post-generate-reactor.buildTarget}"
      inheritRefs="true" exportAll="false" exportRefs="false"/>
  </target>

  <target name="do-generate-reactor">
    
    <reactor-generator
      controlTemplate="Control.vm"
      outputDirectory="${basedir}/reactor"
      templatePath="${maven.home}/templates/reactor"
      outputFile="reactor.report"
      mavenLocalRepo="${maven.localRepo}"
      workspaceDescriptor="${maven.workspaceDescriptor}"
      profileDescriptor="${maven.profileDescriptor}"
    />

  </target>
</project>
