# ============================================================================ #
# D E P E N D E N C I E S   T O   P O M                                        #
# ============================================================================ #
# Generation of the POM. This takes the current POM, removes its dependencies, #
# and copy the generated ones instead.                                         #
#                                                                              #
# With a bit of DVSL, we should be able to keep the previous ones and simply   #
# update them with the infos from the generated dependencies.                  #
# This would avoid having to delete dependencies that a user specifies by hand #
# ============================================================================ #

#match("project")
# ISO-8859-1 allows non-english caracters
<?xml version="1.0" encoding="ISO-8859-1"?>
<project>
$context.applyTemplates()
</project>
#end

# ============================================================================ #
# Here, we check that the file "deps.xml" that we created in the plugin dir of #
# maven's tmp dir exists, and if so, the file is parsed and the                #
# dependencies are added to the POM.                                           #
# ============================================================================ #

#match("dependencies")
  <dependencies>
  #if( $context.toolbox.fileutil.file("$context.toolbox.projectDependencies").exists() )
  #set( $deps = $node.selectNodes("document('$context.toolbox.projectDependencies')/project/*") )
  #foreach( $dep in $deps )
  <dependency>
    <id>$!dep.id</id>
    <version>$!dep.version</version>
    <url>$!dep.url</url>
  </dependency>
  #end
  #else
  #end
</dependencies>
#end

#match("*")
$node.copy()
#end
