<?xml version="1.0"?>

<project xmlns:j="jelly:core">

  <goal
    name="fo"
    prereqs="fo:fo"
    description="Generate XSL:FO project documentation"/>

  <goal name="fo:fo" description="Generate XSL:FO project documentation">

    <mkdir dir="${maven.docs.dest}"/>

    <java classname="org.apache.xalan.xslt.Process" fork="yes">
      <classpath>
        <pathelement location="${maven.repo.local}/xercesImpl-2.0.0.jar"/>
        <pathelement location="${maven.repo.local}/xmlParserAPIs-2.0.0.jar"/>
        <pathelement location="${maven.repo.local}/xalan-2.1.0.jar"/>
      </classpath>
      <arg value="-in"/>
      <!-- FIXME: Using ${maven.docs.src} here causes the build to fail because
                  xalan constructs the path relative to the current directory
                  even if it is an absolute path. -->
      <arg value="xdocs/navigation.xml"/>
      <arg value="-out"/>
      <arg value="${maven.docs.dest}/project.fo"/>
      <arg value="-xsl"/>
      <arg value="${plugin.dir}/project2fo.xslt"/>
      <arg value="-param"/>
      <arg value="basePath"/>
      <arg value="${maven.docs.src}"/>
    </java>

  </goal>

  <goal
    name="pdf"
    prereqs="pdf:pdf"
    description="Generate PDF project documentation"/>

  <goal name="pdf:pdf" description="Generate PDF project documentation"
     prereqs="fo">

    <java classname="org.apache.fop.apps.Fop" fork="yes">
      <classpath>
        <pathelement location="${maven.repo.local}/fop-0.20.3.jar"/>
        <pathelement location="${maven.repo.local}/batik.jar"/>
        <pathelement location="${maven.repo.local}/logkit-1.0.jar"/>
        <pathelement location="${maven.repo.local}/avalon-framework-4.0.jar"/>
        <pathelement location="${maven.repo.local}/xercesImpl-2.0.0.jar"/>
      </classpath>
      <arg line="-fo ${maven.docs.dest}/project.fo -pdf ${maven.docs.dest}/project.pdf"/>
    </java>

  </goal>

</project>
