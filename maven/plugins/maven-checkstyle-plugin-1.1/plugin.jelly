<?xml version="1.0"?>

<project xmlns:j="jelly:core" xmlns:dvsl="dvsl">

  <!-- ================================================================== -->
  <!-- C H E C K S T Y L E                                                -->
  <!-- ================================================================== -->

  <goal name="checkstyle"
        description="Generate code convention conformance reports"
        prereqs="checkstyle:check-license-file"/>

  <goal
    name="checkstyle:generate-report"
    prereqs="init-dvsl-tag"
    description="Generate code convention conformance reports">

    <j:if test="${sourcesPresent == 'true'}">

    <taskdef
      name="checkstyle"
      classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
    </taskdef>

    <!--
    
    If an explicit properties file is set then use that. If one isn't then
    we will look for the maven.checkstyle.type property as there aren't going
    to be that many different formats: gnu, turbine, sun.
   
    -->
    
    <j:set var="checkstylePropertiesX" value="${maven.checkstyle.properties}X"/>
    
    <j:choose>
      <j:when test="${checkstylePropertiesX != 'X'}">
        <j:set var="checkstyleProperties" value="${maven.checkstyle.properties}"/>
      </j:when>
      <j:otherwise>
        <j:set var="checkstyleProperties" value="${plugin.dir}/${maven.checkstyle.format}-checkstyle.properties"/>
      </j:otherwise>
    </j:choose>
    
    <!-- Create the directory for the checkstyle cache in case it doesn't exist already -->
    <dirname property="maven.checkstyle.cache.dir" file="${maven.checkstyle.cache.file}"/>
    <mkdir dir="${maven.checkstyle.cache.dir}"/>

    <echo>Using ${checkstyleProperties} for checkstyle ...</echo>
    
    <checkstyle
      properties="${checkstyleProperties}"
      failOnViolation="${maven.checkstyle.fail.on.violation}"
      cacheFile="${maven.checkstyle.cache.file}" >
      <fileset dir="${pom.build.sourceDirectory}"
        includes="${maven.checkstyle.includes}"
        excludes="${maven.checkstyle.excludes}" />
      <formatter type="xml" toFile="${maven.build.dir}/checkstyle-raw-report.xml"/>
      <j:choose>
        <j:when test="${maven.checkstyle.usefile}">
          <formatter type="plain" toFile="${maven.build.dir}/checkstyle-raw-report.txt"/>
        </j:when>
        <j:otherwise>
          <formatter type="plain"/>
        </j:otherwise>
      </j:choose>     
    </checkstyle>

    <dvsl:dvsl
      basedir="${basedir}"
      style="${plugin.dir}/checkstyle.dvsl"
      toolboxFile="${plugin.dir}/toolbox.props"
      in="${maven.build.dir}/checkstyle-raw-report.xml"
      out="${maven.gen.docs}/checkstyle-report.xml">
    </dvsl:dvsl>

    </j:if>

  </goal>

  <goal name="checkstyle:check-license-file"
        description="Checks the existence of the LICENSE.txt file">

    <available file="${basedir}/LICENSE.txt"
      property="maven.checkstyle.license.exists"/>
    <j:set var="licenseExists" value="${maven.checkstyle.license.exists}X"/>

    <j:choose>
      <j:when test="${licenseExists == 'X'}">
      <echo>
        =======================================================================
        =                             W A R N I N G                           =
        =======================================================================
        =  Your project doesn't contain any LICENSE.txt file. Checktyle needs =
        =  it to check the existence of the License in your source files. If  =
        =  it can't find this file, it throws an error.                       =
        =  A temporary solution is to create an empty LICENSE.txt file.       =
        =  Though, we recommend that you edit this License.                   =
        =======================================================================
      </echo>
      </j:when>

      <j:when test="${maven.checkstyle.license.exists}">
        <attainGoal name="checkstyle:generate-report"/>
      </j:when>
    </j:choose>

  </goal>

</project>
