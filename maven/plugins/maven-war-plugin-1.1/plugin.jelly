<?xml version="1.0"?>

<project xmlns:j="jelly:core">

  <property name="maven.war.final.name" 
    value="${pom.id}-${pom.currentVersion}.war"/>
  
  <!--==================================================================-->
  <!-- Default goal : Builds a war file                                 -->
  <!--==================================================================-->    
  <goal name="war" prereqs="war:war" description="Build a war file"/>

  <!--==================================================================-->
  <!-- Builds a war file                                                -->
  <!--==================================================================-->    
  <goal name="war:war" description="Build a war file">
  
    <j:if test="${sourcesPresent == 'true'}">
      <attainGoal name="java:compile"/>
      <attainGoal name="test:test"/>
    </j:if>

    <echo>Building WAR ${pom.id}</echo>

    <mkdir dir="${maven.war.build.dir}" />
    <war warfile="${maven.war.build.dir}/${pom.id}.war"
         webxml="${maven.war.webxml}">

      <fileset dir="${maven.war.src}">
      	<exclude name="WEB-INF/web.xml"/>
      </fileset>

      <j:forEach var="dep" items="${pom.dependencies}">
        <j:if test="${dep.getProperty('war.bundle.jar')=='true'}">
          <lib dir="${maven.repo.local}/${dep.getProjectId()}/jars/">
            <include name="${dep.getArtifact()}"/>
          </lib>    
        </j:if>  
      </j:forEach>            

      <j:if test="${sourcesPresent == 'true'}">
        <classes dir="${maven.build.dest}">
          <include name="${maven.war.classes.includes}" />
          <exclude name="${maven.war.classes.excludes} " />
        </classes>
      </j:if>

      <metainf dir="${basedir}">
        <include name="LICENSE.txt"/>
      </metainf>      

      <manifest>
        <attribute name="Built-By" value="${user.name}" />
        <section name="${pom.package}">
          <attribute name="Specification-Title" value="${pom.id}" />
          <attribute name="Specification-Version"
                     value="${pom.currentVersion}" />
          <attribute name="Specification-Vendor"
                     value="${pom.organization.name}" />
          <attribute name="Implementation-Title"
                     value="${pom.package}" />
          <attribute name="Implementation-Version"
                     value="${pom.currentVersion}" />
          <attribute name="Implementation-Vendor"
                     value="${pom.organization.name}" />
        </section>
      </manifest>

    </war>

  </goal>

  <!--==================================================================-->
  <!-- Builds an expanded webapp                                        -->
  <!--==================================================================-->    
  <goal name="war:webapp"
        prereqs="java:compile"
        description="Build a webapp directory">

    <echo>Assembling webapp ${pom.id}</echo>

    <property name="webapp.build" value="${maven.war.build.dir}/${pom.id}"/>
    <mkdir dir="${webapp.build}"/>

    <property name="webapp.build.webinf" value="${webapp.build}/WEB-INF"/>
    <mkdir dir="${webapp.build.webinf}"/>

    <property name="webapp.build.lib" value="${webapp.build.webinf}/lib"/>
    <mkdir dir="${webapp.build.lib}"/>

    <property name="webapp.build.classes" value="${webapp.build.webinf}/classes"/>
    <mkdir dir="${webapp.build.classes}"/>

    <copy todir="${webapp.build}">
      <fileset dir="${maven.war.src}"/>
    </copy>

    <j:forEach var="dep" items="${pom.dependencies}">
      <j:if test="${dep.getProperty('war.bundle.jar')=='true'}">
        <copy todir="${webapp.build.lib}"
          file="${maven.repo.local}/${dep.getProjectId()}/jars/${dep.getArtifact()}"/>
      </j:if>  
    </j:forEach>            

    <copy todir="${webapp.build.classes}">
      <fileset dir="${maven.build.dest}">
        <include name="${maven.war.classes.includes}" />
        <exclude name="${maven.war.classes.excludes} " />
      </fileset>
    </copy>  

  </goal>

  <!--==================================================================-->
  <!-- Install the war in the local repository                          -->
  <!--==================================================================-->    
  <goal name="war:install"
        prereqs="war:war"
        description="Install the war in the local repository">

    <property name="maven.war.install.dir" 
    	value="${maven.repo.local}/${pom.id}/wars"/>
    <mkdir dir="${maven.war.install.dir}"/>
    <copy file="${maven.war.build.dir}/${pom.id}.war"
      tofile="${maven.war.install.dir}/${maven.war.final.name}"/>

  </goal>

</project>
